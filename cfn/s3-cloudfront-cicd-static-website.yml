---
AWSTemplateFormatVersion: "2010-09-09"
Description: S3 Bucket CI/CD Static Website Using CodeBuild and CodePipeline

Parameters:
  GitHubUser:
    Type: String
    Description: GitHub Username
  GitHubRepo:
    Type: String
    Description: GitHub Repo Name
  GitHubBranch:
    Type: String
    Description: GitHub Branch
    Default: "main"
  GitHubToken:
    NoEcho: true
    Type: String
    Description: Github Secret Key
  BuildType:
    Type: String
    Default: "LINUX_CONTAINER"
    Description: Build Container Type
  BuildComputeType:
    Type: String
    Default: "BUILD_GENERAL1_SMALL"
    Description: Build Compute Type
  BuildImage:
    Type: String
    Default: "aws/codebuild/ubuntu-base:14.04"
    Description: Build Image
  CertificateArn:
    Description: Certificate ARN
    Type: String
  DomainName:
    Description: Domain Name
    Type: String
  SubDomain:
    Description: Sub Domain
    Type: String

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "GitHub Configuration"
        Parameters:
          - GitHubToken
          - GitHubUser
          - GitHubRepo
          - GitHubBranch
      - Label:
          default: "Build Configuration"
        Parameters:
          - BuildType
          - BuildComputeType
          - BuildImage
    ParameterLabels:
      GitHubToken:
        default: GitHub OAuth2 Token
      GitHubUser:
        default: GitHub User/Org Name
      GitHubRepo:
        default: GitHub Repository Name
      GitHubBranch:
        default: GitHub Branch Name
      BuildType:
        default: CodeBuild Type
      BuildComputeType:
        default: CodeBuild Instance Type
      BuildImage:
        default: CodeBuild Image

Resources:
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: codebuild-service
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action: "*"
                Resource: "*"
            Version: "2012-10-17"
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: codepipeline-service
          PolicyDocument:
            Statement:
              - Action:
                  - codebuild:*
                Resource: "*"
                Effect: Allow
              - Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                Resource: "*"
                Effect: Allow
              - Action:
                  - s3:PutObject
                Resource:
                  - arn:aws:s3:::codepipeline*
                Effect: Allow
              - Action:
                  - s3:*
                  - cloudformation:*
                  - iam:PassRole
                Resource: "*"
                Effect: Allow
            Version: "2012-10-17"
  SiteBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      WebsiteConfiguration:
        IndexDocument: index.html
  PipelineBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
  CodeBuildDeploySite:
    Type: AWS::CodeBuild::Project
    DependsOn: CodeBuildRole
    Properties:
      Name: !Sub ${AWS::StackName}-DeploySite
      Description: Deploy site to S3
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: !Ref BuildType
        ComputeType: !Ref BuildComputeType
        Image: !Sub ${BuildImage}
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          version: 0.2
          phases:
            post_build:
              commands:
                - aws s3 cp --recursive --acl public-read . s3://${SiteBucket}/ --debug
                - aws cloudfront create-invalidation --distribution-id ${CloudFrontDistribution} --paths "/*"
          artifacts:
            type: zip
            files:
              - ./index.html
      TimeoutInMinutes: 10
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - InputArtifacts: []
              Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: "1"
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceArtifacts
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: Artifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              InputArtifacts:
                - Name: SourceArtifacts
              OutputArtifacts:
                - Name: DeploymentArtifacts
              Configuration:
                ProjectName: !Ref CodeBuildDeploySite
              RunOrder: 1
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineBucket

  CloudFrontDistribution:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        Aliases:
          - !Sub "${SubDomain}${DomainName}"
        DefaultCacheBehavior:
          Compress: true
          DefaultTTL: 86400
          ForwardedValues:
            QueryString: true
          MaxTTL: 31536000
          TargetOriginId: !Sub "S3-${AWS::StackName}-root"
          ViewerProtocolPolicy: "redirect-to-https"
          ResponseHeadersPolicyId: !Ref ResponseHeadersPolicy
        CustomErrorResponses:
          - ErrorCachingMinTTL: 60
            ErrorCode: 404
            ResponseCode: 404
            ResponsePagePath: "/404.html"
          - ErrorCachingMinTTL: 60
            ErrorCode: 403
            ResponseCode: 403
            ResponsePagePath: "/403.html"
        Enabled: true
        HttpVersion: "http2"
        DefaultRootObject: "index.html"
        IPV6Enabled: true
        Origins:
          - DomainName: !GetAtt 'SiteBucket.RegionalDomainName'
            Id: !Sub "S3-${AWS::StackName}-root"
            S3OriginConfig:
              OriginAccessIdentity:
                !Join [
                  "",
                  [
                    "origin-access-identity/cloudfront/",
                    !Ref CloudFrontOriginAccessIdentity,
                  ],
                ]
        PriceClass: "PriceClass_All"
        ViewerCertificate:
          AcmCertificateArn: !Ref "CertificateArn"
          MinimumProtocolVersion: "TLSv1.1_2016"
          SslSupportMethod: "sni-only"
      Tags:
        - Key: Solution
          Value: ACFS3
    DependsOn: PipelineBucket

  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub "CloudFront OAI for ${SubDomain}${DomainName}"

  Route53RecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Sub "${DomainName}."
      RecordSets:
        - Name: !Sub "${SubDomain}${DomainName}"
          Type: "A"
          AliasTarget:
            DNSName: !GetAtt "CloudFrontDistribution.DomainName"
            EvaluateTargetHealth: false
            # This HosteZoneID is always used for alias records pointing to CloudFront
            HostedZoneId: "Z2FDTNDATAQYW2"

  ResponseHeadersPolicy:
    Type: AWS::CloudFront::ResponseHeadersPolicy
    Properties:
      ResponseHeadersPolicyConfig:
        Name: !Sub "${AWS::StackName}-static-site-security-headers"
        SecurityHeadersConfig:
          StrictTransportSecurity:
            AccessControlMaxAgeSec: 63072000
            IncludeSubdomains: true
            Override: true
            Preload: true
          ContentTypeOptions:
            Override: true
          FrameOptions:
            FrameOption: DENY
            Override: true
          XSSProtection:
            ModeBlock: true
            Override: true
            Protection: true

Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
    Description: CodePipeline URL
  SiteUrl:
    Value: !GetAtt [SiteBucket, WebsiteURL]
    Description: S3 Website URL
  CloudFrontDistribution:
    Value: !GetAtt CloudFrontDistribution.DomainName
    Description: CloudFront Distribution
  CloudFrontDomainName:
    Value: !Sub "${SubDomain}${DomainName}"
    Description: CloudFront URL
